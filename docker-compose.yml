version: '3.8'
services:
  myphp74:
    command: apache2-foreground -c "DocumentRoot /var/www" -c "SetEnv DOCKER_ENVIRONMENT 1"
    container_name: myphp74container
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile.php74
    volumes:
      - ../.:/var/www
    ports:
      - 8074:80
    networks:
      - dev
  myphp81:
    command: apache2-foreground -c "DocumentRoot /var/www" -c "SetEnv DOCKER_ENVIRONMENT 1"
    container_name: myphp81container
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile.php81
    volumes:
      - ../.:/var/www
    ports:
      - 8081:80
      - 80:80
    networks:
      - dev
  mysql:          
    image: mysql
    container_name: mysqlcontainer
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 33060:3306
    networks:
      - dev
  postgres:
    container_name: postgrescontainer
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: root    
    networks:
      - dev
    volumes:
      - postgres:/var/lib/postgresql/data 
    ports:
      - 5432:5432
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmincontainer
    restart: always
    depends_on:
      - mysqlcompose
    ports:
      - 8180:80
    environment:
      PMA_HOST: mysql
    networks:
      - dev 
  adminer:
    image: adminer
    container_name: adminercontainer
    restart: always
    ports:
      - 8181:8080
    networks:
      - dev 
    environment:
      ADMINER_DEFAULT_SERVER: mysql 


networks:
    dev:
volumes:
    mysql:
    postgres:        